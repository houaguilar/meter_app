// lib/data/repositories/location/colombia_location_repository.dart

import '../../../models/perfil/location/administrative_level_2.dart';
import '../../../models/perfil/location/administrative_level_3.dart';
import '../../../models/perfil/location/administrative_level_4.dart';
import '../../../models/perfil/location/country.dart';
import '../../../models/perfil/location/location_config.dart';
import 'location_repository.dart';

/// Repositorio de ubicaciones de Colombia üá®üá¥
/// Colombia tiene 32 departamentos, 1,102 municipios
class ColombiaLocationRepository extends LocationRepository {
  @override
  LocationConfig get config => LocationConfig.colombia;

  /// Datos de Colombia con departamentos, municipios y corregimientos
  /// Estructura: {Departamento: {Municipio: [Corregimientos]}}
  /// NOTA: Los datos aqu√≠ son de ejemplo. Debes reemplazarlos con datos reales completos.
  static const Map<String, Map<String, List<String>>> _colombiaData = {
    'AMAZONAS': {
      'Leticia': [
        'El Encanto',
        'La Chorrera',
        'La Pedrera',
        'La Victoria',
        'Mirit√≠-Paran√°',
        'Puerto Alegr√≠a',
        'Puerto Arica',
        'Puerto Nari√±o',
        'Puerto Santander',
        'Tarapac√°',
      ],
    },
    'ANTIOQUIA': {
      'Medell√≠n': [
        'Altavista',
        'San Antonio de Prado',
        'San Crist√≥bal',
        'Palmitas',
        'Santa Elena',
      ],
      'Bello': ['Bello Centro'],
      'Itag√º√≠': ['Itag√º√≠ Centro'],
      'Envigado': ['Envigado Centro'],
      'Rionegro': ['Aeropuerto Jos√© Mar√≠a C√≥rdova'],
    },
    'ATL√ÅNTICO': {
      'Barranquilla': [
        'La Playa',
        'Las Flores',
        'Juan Mina',
      ],
      'Soledad': ['Soledad Centro'],
      'Malambo': ['Malambo Centro'],
    },
    'BOGOT√Å D.C.': {
      'Bogot√°': [
        'Usaqu√©n',
        'Chapinero',
        'Santa Fe',
        'San Crist√≥bal',
        'Usme',
        'Tunjuelito',
        'Bosa',
        'Kennedy',
        'Fontib√≥n',
        'Engativ√°',
        'Suba',
        'Barrios Unidos',
        'Teusaquillo',
        'Los M√°rtires',
        'Antonio Nari√±o',
        'Puente Aranda',
        'La Candelaria',
        'Rafael Uribe Uribe',
        'Ciudad Bol√≠var',
        'Sumapaz',
      ],
    },
    'BOL√çVAR': {
      'Cartagena': [
        'Ararca',
        'Bayunca',
        'Pasacaballos',
        'Santa Ana',
        'Tierra Baja',
      ],
      'Magangu√©': ['Magangu√© Centro'],
    },
    'BOYAC√Å': {
      'Tunja': ['Tunja Centro'],
      'Duitama': ['Duitama Centro'],
      'Sogamoso': ['Sogamoso Centro'],
    },
    'CALDAS': {
      'Manizales': ['Manizales Centro'],
      'Villamar√≠a': ['Villamar√≠a Centro'],
    },
    'CAQUET√Å': {
      'Florencia': ['Florencia Centro'],
    },
    'CASANARE': {
      'Yopal': ['Yopal Centro'],
    },
    'CAUCA': {
      'Popay√°n': ['Popay√°n Centro'],
    },
    'CESAR': {
      'Valledupar': ['Valledupar Centro'],
    },
    'CHOC√ì': {
      'Quibd√≥': ['Quibd√≥ Centro'],
    },
    'C√ìRDOBA': {
      'Monter√≠a': ['Monter√≠a Centro'],
    },
    'CUNDINAMARCA': {
      'Soacha': ['Soacha Centro'],
      'Facatativ√°': ['Facatativ√° Centro'],
      'Zipaquir√°': ['Zipaquir√° Centro'],
      'Ch√≠a': ['Ch√≠a Centro'],
      'Mosquera': ['Mosquera Centro'],
      'Fusagasug√°': ['Fusagasug√° Centro'],
    },
    'GUAIN√çA': {
      'In√≠rida': ['In√≠rida Centro'],
    },
    'GUAVIARE': {
      'San Jos√© del Guaviare': ['San Jos√© Centro'],
    },
    'HUILA': {
      'Neiva': ['Neiva Centro'],
    },
    'LA GUAJIRA': {
      'Riohacha': ['Riohacha Centro'],
    },
    'MAGDALENA': {
      'Santa Marta': ['Santa Marta Centro'],
    },
    'META': {
      'Villavicencio': ['Villavicencio Centro'],
    },
    'NARI√ëO': {
      'Pasto': ['Pasto Centro'],
    },
    'NORTE DE SANTANDER': {
      'C√∫cuta': ['C√∫cuta Centro'],
    },
    'PUTUMAYO': {
      'Mocoa': ['Mocoa Centro'],
    },
    'QUIND√çO': {
      'Armenia': ['Armenia Centro'],
    },
    'RISARALDA': {
      'Pereira': ['Pereira Centro'],
      'Dosquebradas': ['Dosquebradas Centro'],
    },
    'SAN ANDR√âS Y PROVIDENCIA': {
      'San Andr√©s': ['San Andr√©s Centro'],
      'Providencia': ['Providencia Centro'],
    },
    'SANTANDER': {
      'Bucaramanga': ['Bucaramanga Centro'],
      'Floridablanca': ['Floridablanca Centro'],
      'Gir√≥n': ['Gir√≥n Centro'],
      'Piedecuesta': ['Piedecuesta Centro'],
    },
    'SUCRE': {
      'Sincelejo': ['Sincelejo Centro'],
    },
    'TOLIMA': {
      'Ibagu√©': ['Ibagu√© Centro'],
    },
    'VALLE DEL CAUCA': {
      'Cali': [
        'Cali Centro',
        'Aguablanca',
        'Pance',
      ],
      'Palmira': ['Palmira Centro'],
      'Buenaventura': ['Buenaventura Centro'],
      'Tulu√°': ['Tulu√° Centro'],
      'Jamund√≠': ['Jamund√≠ Centro'],
    },
    'VAUP√âS': {
      'Mit√∫': ['Mit√∫ Centro'],
    },
    'VICHADA': {
      'Puerto Carre√±o': ['Puerto Carre√±o Centro'],
    },
  };

  @override
  Country getCountry() => config.country;

  @override
  List<AdministrativeLevel2> getLevel2() {
    return _colombiaData.keys
        .map((key) => AdministrativeLevel2(code: key, name: key))
        .toList()
      ..sort((a, b) => a.name.compareTo(b.name));
  }

  @override
  List<AdministrativeLevel3> getLevel3(String level2Code) {
    final level2Data = _colombiaData[level2Code.toUpperCase()];
    if (level2Data == null) return [];

    return level2Data.keys
        .map((key) => AdministrativeLevel3(code: key, name: key))
        .toList()
      ..sort((a, b) => a.name.compareTo(b.name));
  }

  @override
  List<AdministrativeLevel4> getLevel4(String level2Code, String level3Code) {
    final level2Data = _colombiaData[level2Code.toUpperCase()];
    if (level2Data == null) return [];

    final corregimientos = level2Data[level3Code];
    if (corregimientos == null) return [];

    return corregimientos
        .map((name) => AdministrativeLevel4(code: name, name: name))
        .toList()
      ..sort((a, b) => a.name.compareTo(b.name));
  }
}
